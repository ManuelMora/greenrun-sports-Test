{
  "openapi": "3.0.2",
  "info": {
    "title": "Greenrun Sports API",
    "version": "1.0"
  },
  "servers": [{ "url": "http://localhost:8090/V1" }],
  "paths": {
    "/countries": {
      "summary": "Countries",
      "description": "Resources to manage a countries",
      "get": {
        "tags": ["Countries"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Countries.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to get countries",
        "description": "Get all list from system countries"
      },
      "post": {
        "tags": ["Countries"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Countries.Country"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Countries.Create.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to create a country",
        "description": "create new system country"
      }
    },
    "/countries/{id}": {
      "summary": "Countries",
      "description": "Resources to manage a countries",
      "get": {
        "tags": ["Countries"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Countries.Country.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Country id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to get country by Id",
        "description": "Get info from system country"
      },
      "put": {
        "tags": ["Countries"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Countries.Country"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Countries.Update.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Country id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to update country",
        "description": "update a system country"
      },
      "delete": {
        "tags": ["Countries"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Countries.Delete.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Country id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to delete country",
        "description": "delete a system country"
      }
    },
    "/cities": {
      "summary": "Cities",
      "description": "Resources to manage a Cities",
      "get": {
        "tags": ["Cities"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to get Cities",
        "description": "Get all list from system Cities"
      },
      "post": {
        "tags": ["Cities"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities.City"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities.Create.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to create a city",
        "description": "create new system city"
      }
    },
    "/cities/{id}": {
      "summary": "Cities",
      "description": "Resources to manage a countries",
      "get": {
        "tags": ["Cities"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities.City.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "City id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to get City by Id",
        "description": "Get info from system City"
      },
      "put": {
        "tags": ["Cities"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities.City"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities.Update.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "City id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to update City",
        "description": "update a system City"
      },
      "delete": {
        "tags": ["Cities"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities.Delete.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "City id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to delete City",
        "description": "delete a system City"
      }
    },
    "/modules": {
      "summary": "Modules",
      "description": "Resources to manage a modules",
      "get": {
        "tags": ["Modules"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modules.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to get modules",
        "description": "Get all list from system modules"
      },
      "post": {
        "tags": ["Modules"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Modules.Module"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modules.Create.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to create a module",
        "description": "create new system module"
      }
    },
    "/modules/{id}": {
      "summary": "Modules",
      "description": "Resources to manage a modules",
      "get": {
        "tags": ["Modules"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modules.Module.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Module id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to get module by Id",
        "description": "Get info from system module"
      },
      "put": {
        "tags": ["Modules"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Modules.Module"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modules.Update.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Module id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to update module",
        "description": "update a system module"
      },
      "delete": {
        "tags": ["Modules"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modules.Delete.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Module id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to delete module",
        "description": "delete a system module"
      }
    },
    "/roles": {
      "summary": "Roles",
      "description": "Resources to manage a roles",
      "get": {
        "tags": ["Roles"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to get roles",
        "description": "Get all list from system roles"
      },
      "post": {
        "tags": ["Roles"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Roles.Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles.Create.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to create a role",
        "description": "create new system role"
      }
    },
    "/roles/{id}": {
      "summary": "Roles",
      "description": "Resources to manage a roles",
      "get": {
        "tags": ["Roles"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles.Role.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Role id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to get role by Id",
        "description": "Get info from system role"
      },
      "put": {
        "tags": ["Roles"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Roles.Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles.Update.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Role id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to update role",
        "description": "update a system role"
      },
      "delete": {
        "tags": ["Roles"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles.Delete.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Role id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to delete role",
        "description": "delete a system role"
      }
    },
    "/permissions": {
      "summary": "Role Permissions",
      "description": "Resources to manage a permissions from roles",
      "get": {
        "tags": ["Role Permissions"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermissions.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to get permissions from all roles",
        "description": "Get all list from system role permissions"
      },
      "post": {
        "tags": ["Role Permissions"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePermissions.RolePermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermissions.Create.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "summary": "endpoint to create a permission from specific role",
        "description": "create new system permission from role"
      }
    },
    "/permissions/{role_id}": {
      "summary": "Roles",
      "description": "Resources to manage a role permissions",
      "get": {
        "tags": ["Role Permissions"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermission.PermissionsRole.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Role id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to get permissions by role Id",
        "description": "Get permissions from system role"
      },
      "delete": {
        "tags": ["Role Permissions"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermissions.Delete.Response"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response.Error"
                }
              }
            },
            "description": "500 response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Role Permission id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "summary": "endpoint to delete specifi permission from role",
        "description": "delete a permission from system role"
      }
    }
  },
  "components": {
    "schemas": {
      "Countries.Country": {
        "title": "Countries.Country",
        "description": "Body to create a country",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "United States"
        },
        "additionalProperties": false
      },
      "Countries.Response": {
        "title": "Countries.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "rows": {
                "description": "data rows",
                "type": "array"
              },
              "total": {
                "format": "int32",
                "description": "count total rows",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "rows": [
              {
                "id": 1,
                "name": "United States",
                "country_status": 1
              },
              {
                "id": 2,
                "name": "Brazil",
                "country_status": 1
              }
            ],
            "total": 2
          }
        }
      },
      "Countries.Country.Response": {
        "title": "Countries.Country.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "id": {
                "format": "int32",
                "description": "country id",
                "type": "integer"
              },
              "name": {
                "description": "country name",
                "type": "string"
              },
              "country_status": {
                "format": "int32",
                "description": "country status",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "id": 1,
            "name": "United States",
            "country_status": 1
          }
        }
      },
      "Countries.Create.Response": {
        "title": "Countries.Create.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "country created."
        }
      },
      "Countries.Update.Response": {
        "title": "Countries.Update.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "country updated."
        }
      },
      "Countries.Delete.Response": {
        "title": "Countries.Delete.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "country deleted."
        }
      },
      "Cities.City": {
        "title": "Cities.City",
        "description": "Body to create a City",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "country_id": {
            "format": "int32",
            "description": "country id",
            "type": "integer"
          }
        },
        "example": {
          "name": "Texas",
          "country_id": 1
        },
        "additionalProperties": false
      },
      "Cities.Response": {
        "title": "Cities.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "rows": {
                "description": "data rows",
                "type": "array"
              },
              "total": {
                "format": "int32",
                "description": "count total rows",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "rows": [
              {
                "id": 1,
                "name": "Texas",
                "country_id": 1,
                "country": "United States",
                "city_status": 1
              }
            ],
            "total": 1
          }
        }
      },
      "Cities.City.Response": {
        "title": "Cities.City.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "id": {
                "format": "int32",
                "description": "city id",
                "type": "integer"
              },
              "name": {
                "description": "city name",
                "type": "string"
              },
              "country_id": {
                "format": "int32",
                "description": "country id",
                "type": "integer"
              },
              "country": {
                "description": "country name",
                "type": "string"
              },
              "city_status": {
                "format": "int32",
                "description": "city status",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "id": 1,
            "name": "Texas",
            "country_id": 1,
            "country": "United States",
            "city_status": 1
          }
        }
      },
      "Cities.Create.Response": {
        "title": "Cities.Create.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "city created."
        }
      },
      "Cities.Update.Response": {
        "title": "Cities.Update.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "city updated."
        }
      },
      "Cities.Delete.Response": {
        "title": "Cities.Delete.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "city deleted."
        }
      },
      "Modules.Module": {
        "title": "Modules.Module",
        "description": "Body to create a module",
        "required": ["name", "description"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "name": "admin",
          "description": "module to manage admins"
        },
        "additionalProperties": false
      },
      "Modules.Response": {
        "title": "Modules.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "rows": {
                "description": "data rows",
                "type": "array"
              },
              "total": {
                "format": "int32",
                "description": "count total rows",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "rows": [
              {
                "id": 1,
                "name": "users",
                "description": "module to manage users",
                "status": 1
              }
            ],
            "total": 1
          }
        }
      },
      "Modules.Module.Response": {
        "title": "Modules.Module.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "id": {
                "format": "int32",
                "description": "module id",
                "type": "integer"
              },
              "name": {
                "description": "module name",
                "type": "string"
              },
              "description": {
                "description": "module description",
                "type": "string"
              },
              "status": {
                "format": "int32",
                "description": "module status",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "id": 1,
            "name": "users",
            "description": "module to manage users",
            "status": 1
          }
        }
      },
      "Modules.Create.Response": {
        "title": "Modules.Create.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "module created."
        }
      },
      "Modules.Update.Response": {
        "title": "Modules.Update.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "module updated."
        }
      },
      "Modules.Delete.Response": {
        "title": "Modules.Delete.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "module deleted."
        }
      },
      "Roles.Role": {
        "title": "Roles.Role",
        "description": "Body to create a role",
        "required": ["name", "description"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "name": "user",
          "description": "role from users"
        },
        "additionalProperties": false
      },
      "Roles.Response": {
        "title": "Roles.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "rows": {
                "description": "data rows",
                "type": "array"
              },
              "total": {
                "format": "int32",
                "description": "count total rows",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "rows": [
              {
                "id": 1,
                "name": "admin",
                "description": "admin role",
                "status": 1
              }
            ],
            "total": 1
          }
        }
      },
      "Roles.Role.Response": {
        "title": "Roles.Role.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "id": {
                "format": "int32",
                "description": "role id",
                "type": "integer"
              },
              "name": {
                "description": "role name",
                "type": "string"
              },
              "description": {
                "description": "role description",
                "type": "string"
              },
              "status": {
                "format": "int32",
                "description": "role status",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "id": 1,
            "name": "admin",
            "description": "admin role",
            "status": 1
          }
        }
      },
      "Roles.Create.Response": {
        "title": "Roles.Create.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "role created."
        }
      },
      "Roles.Update.Response": {
        "title": "Roles.Update.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "role updated."
        }
      },
      "Roles.Delete.Response": {
        "title": "Roles.Delete.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "role deleted."
        }
      },
      "RolePermissions.RolePermission": {
        "title": "RolePermissions.RolePermission",
        "description": "Body to create a permission from role",
        "required": ["role_id", "module_id", "role_action"],
        "type": "object",
        "properties": {
          "role_id": {
            "type": "integer"
          },
          "module_id": {
            "type": "integer"
          },
          "role_action": {
            "type": "integer"
          }
        },
        "example": {
          "role_id": 1,
          "module_id": 2,
          "role_action": 4
        },
        "additionalProperties": false
      },
      "RolePermissions.Response": {
        "title": "RolePermissions.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "rows": {
                "description": "data rows",
                "type": "array"
              },
              "total": {
                "format": "int32",
                "description": "count total rows",
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "rows": [
              {
                "role_id": 1,
                "role": "admin",
                "module_id": 2,
                "module": "admin",
                "role_action": 2,
                "action": "create"
              }
            ],
            "total": 1
          }
        }
      },
      "RolePermission.PermissionsRole.Response": {
        "title": "RolePermission.PermissionsRole.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "object",
            "properties": {
              "id": {
                "format": "int32",
                "description": "role permission id",
                "type": "integer"
              },
              "role_id": {
                "format": "int32",
                "description": "role id",
                "type": "integer"
              },
              "role": {
                "description": "role name",
                "type": "string"
              },
              "module_id": {
                "format": "int32",
                "description": "module id",
                "type": "integer"
              },
              "module": {
                "description": "module name",
                "type": "string"
              },
              "role_action": {
                "format": "int32",
                "description": "role action id",
                "type": "integer"
              },
              "action": {
                "description": "action name",
                "type": "string"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "data": {
            "rows": [
              {
                "role_id": 1,
                "role": "admin",
                "module_id": 2,
                "module": "admin",
                "role_action": 2,
                "action": "create"
              }
            ],
            "total": 1
          }
        }
      },
      "RolePermissions.Create.Response": {
        "title": "RolePermissions.Create.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "permission to role created."
        }
      },
      "RolePermissions.Delete.Response": {
        "title": "RolePermissions.Delete.Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "permission from role deleted."
        }
      },
      "Response": {
        "title": "Response",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "description": "status from response",
            "type": "integer"
          },
          "data": {
            "description": "data from response",
            "type": "string"
          }
        },
        "example": {
          "status": 200,
          "data": "Test passed"
        }
      },
      "Response.Error": {
        "title": "Response.Error",
        "description": "Error response from API",
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "status": 500,
          "message": "Error"
        }
      }
    },
    "responses": {
      "simpleResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Response"
            }
          }
        },
        "description": "a simple response"
      }
    }
  }
}
